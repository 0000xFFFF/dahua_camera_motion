#!/usr/bin/env python3
import cv2
import time
import sys

def start_capture(ip, user, password, channel):
    """Start OpenCV VideoCapture for a given RTSP channel."""
    rtsp_url = f"rtsp://{user}:{password}@{ip}:554/cam/realmonitor?channel={channel}&subtype=0"
    cap = cv2.VideoCapture(rtsp_url)
    
    if not cap.isOpened():
        print(f"Failed to open stream for channel {channel}")
    
    # Reduce buffering
    #cap.set(cv2.CAP_PROP_BUFFERSIZE, 1)

    return cap

def flush_frames(cap, flush_count=5):
    """Flush old frames by reading a few frames quickly."""
    for _ in range(flush_count):
        cap.read()

def motion_detection(ip, user, password):
    """Detect motion in multiple RTSP streams and display accordingly."""
    
    caps = {i: None for i in range(7)}
    
    for i in range(7):
        print(f"capture on ch: {i}")
        caps[i] = start_capture(ip, user, password, i)


    current_ch = 0

    while True:
        display_frame = None

        for i in range(7):
            ret, frame = caps[i].read()
            if i == current_ch:
                display_frame = frame
        
        if not ret:
            print(f"Failed to read frame from channel {current_ch}, retrying...")
            caps[current_ch].release()
            caps[current_ch] = None
            continue  # Skip this iteration if there's no valid frame
        
        # Display the processed frame
        #display_frame = cv2.resize(display_frame, (1800, 1000))
        cv2.imshow('Motion Detection', display_frame)

        key = cv2.waitKey(1) & 0xFF

        # Allow switching between channels using number keys
        if key == ord('0'): current_ch = 0
        if key == ord('1'): current_ch = 1
        if key == ord('2'): current_ch = 2
        if key == ord('3'): current_ch = 3
        if key == ord('4'): current_ch = 4
        if key == ord('5'): current_ch = 5
        if key == ord('6'): current_ch = 6

        if key == ord('q'):
            break

    # Release all resources before exiting
    for cap in caps.values():
        if cap:
            cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    if len(sys.argv) != 4:
        print(f"Usage: python {sys.argv[0]} <IP> <USER> <PASS>")
        sys.exit(1)
    
    ip, user, password = sys.argv[1:]
    motion_detection(ip, user, password)

